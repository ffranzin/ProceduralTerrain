#pragma kernel GenerateNormalmap

Texture2D<float> _HeightmapAtlas;
RWTexture2D<float4> _NormalmapAtlas;

float2 _HeightmapAtlasPos;
float2 _NormalmapAtlasPos;
                           
int _NormalmapSizePadded;

float _NodeSize;

[numthreads(8,8,1)]
void GenerateNormalmap1(uint3 id : SV_DispatchThreadID)
{
    if (id.x >= _NormalmapSizePadded || id.y >= _NormalmapSizePadded)
        return;

    int2 texcoord = _HeightmapAtlasPos + int2(id.xy);
    float3 n;

    float bump_level = 8.0;

    float tl = _HeightmapAtlas.Load(int3(texcoord + int2(-1, -1), 0));
    float t = _HeightmapAtlas.Load(int3(texcoord + int2(0, -1), 0));
    float tr = _HeightmapAtlas.Load(int3(texcoord + int2(1, -1), 0));

    float l = _HeightmapAtlas.Load(int3(texcoord + int2(-1, 0), 0));
    float c = _HeightmapAtlas.Load(int3(texcoord, 0));
    float r = _HeightmapAtlas.Load(int3(texcoord + int2(1, 0), 0));

    float bl = _HeightmapAtlas.Load(int3(texcoord + int2(-1, 1), 0));
    float b = _HeightmapAtlas.Load(int3(texcoord + int2(0, 1), 0));
    float br = _HeightmapAtlas.Load(int3(texcoord + int2(1, 1), 0));

	// Compute dx using Sobel:
	//           -1 0 1 
	//           -2 0 2
	//           -1 0 1
    float dX = tr + 2 * r + br - tl - 2 * l - bl;
	// Compute dy using Sobel:
	//           -1 -2 -1 
	//            0  0  0
	//            1  2  1
    float dY = bl + 2 * b + br - tl - 2 * t - tr;

	// Build the normalized normal
    n = normalize(float3(-dX, 1.0f / bump_level, -dY));

    _NormalmapAtlas[_NormalmapAtlasPos + float2(id.x, id.y)] = float4(n, 1);
}


[numthreads(8,8,1)]
void GenerateNormalmap(uint3 id : SV_DispatchThreadID)
{
	if (id.x >= _NormalmapSizePadded || id.y >= _NormalmapSizePadded)
	{
		return;
	}

	int2 texcoord = _HeightmapAtlasPos + int2(id.xy);
	
	float strength = 16.0;

	float tl =	_HeightmapAtlas.Load(int3(texcoord + int2(-1, -1), 0)).r;
	float t =	_HeightmapAtlas.Load(int3(texcoord + int2(0, -1), 0)).r;
	float tr =	_HeightmapAtlas.Load(int3(texcoord + int2(1, -1), 0)).r;

	float l =	_HeightmapAtlas.Load(int3(texcoord + int2(-1, 0), 0)).r;
	float r =	_HeightmapAtlas.Load(int3(texcoord + int2(1, 0), 0)).r;

	float bl =	_HeightmapAtlas.Load(int3(texcoord + int2(-1, 1), 0)).r;
	float b =	_HeightmapAtlas.Load(int3(texcoord + int2(0, 1), 0)).r;
	float br =	_HeightmapAtlas.Load(int3(texcoord + int2(1, 1), 0)).r;

	float dX = (tr + 2.0 * r + br) - (tl + 2.0 * l + bl);
	float dY = (bl + 2.0 * b + br) - (tl + 2.0 * t + tr);
    float dZ = 1.0 / strength;

	float3 normal = normalize(float3(-dX, 1.0f / strength, -dY));

	_NormalmapAtlas[_NormalmapAtlasPos + float2(id.x, id.y)] = float4(normal, 1);
}


